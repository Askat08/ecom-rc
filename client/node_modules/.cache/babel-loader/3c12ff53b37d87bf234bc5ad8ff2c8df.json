{"ast":null,"code":"var _jsxFileName = \"/Users/Askat/Desktop/ecom-rc/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnaphsot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: true,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: true,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/Askat/Desktop/ecom-rc/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionOverview","WithSpinner","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnaphsot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACD,kBAAD,CAAjD;KAAMM,6B;AACN,MAAMC,yBAAyB,GAAGN,WAAW,CAACC,cAAD,CAA7C;MAAMK,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD4B;AAAA,SAKpCC,uBALoC,GAKV,IALU;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAGDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAE,IAA1C;AAAA,aAAoDA;AAApD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,IAAtC;AAAA,aAAgDA;AAAhD;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA3BmC;;AA8BtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAGA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from \"../collection/collection.component\";\n\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{ \n  state = {\n    loading: true\n  }  \n\n  unsubscribeFromSnaphsot = null;\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    }); \n  }  \n  \n  \n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className='shop-page'> \n        <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={true} {...props}/>}/>\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={true} {...props}/>}/>\n      </div>\n    );  \n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}