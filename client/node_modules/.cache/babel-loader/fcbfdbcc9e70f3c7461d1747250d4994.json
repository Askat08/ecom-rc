{"ast":null,"code":"var _jsxFileName = \"/Users/Askat/Desktop/ecom-rc/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CartItem from '../cart-item/cart-item.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessage } from './cart-dropdown.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(CartDropdownContainer, {\n  children: [/*#__PURE__*/_jsxDEV(CartItemsContainer, {\n    children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 36\n    }, this)) : /*#__PURE__*/_jsxDEV(EmptyMessage, {\n      children: \"You Cart is EMPTY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 86\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = Cart;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(Cart));\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/Askat/Desktop/ecom-rc/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","CustomButton","selectCartItems","toggleCartHidden","CartDropdownContainer","CartItemsContainer","EmptyMessage","Cart","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SAAQC,qBAAR,EAA+BC,kBAA/B,EAAmDC,YAAnD,QAAsE,wBAAtE;;;AAEA,MAAMC,IAAI,GAAI,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,kBACZ,QAAC,qBAAD;AAAA,0BACE,QAAC,kBAAD;AAAA,cAEIF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAAI,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YAA1B,CADD,gBAC6E,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHjF;AAAA;AAAA;AAAA;AAAA,UADF,eAOE,QAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAM;AAC3BL,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMI,I;AAgBN,MAAMS,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,IAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\nimport CartItem from '../cart-item/cart-item.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nimport {CartDropdownContainer, CartItemsContainer, EmptyMessage} from './cart-dropdown.styles';\n \nconst Cart  = ({cartItems, history, dispatch}) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {\n        cartItems.length ?\n        (cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem}/>)) : <EmptyMessage>You Cart is EMPTY</EmptyMessage>\n      }\n    </CartItemsContainer> \n    <CustomButton onClick={() => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    }} >GO TO CHECKOUT</CustomButton>\n  </CartDropdownContainer>\n);\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(Cart));"]},"metadata":{},"sourceType":"module"}